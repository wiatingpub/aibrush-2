openapi: 3.0.0
tags:
  - name: AIBrush

info:
  title: AIBrush API
  description: Orchestration backend for AI Brush
  version: 1.0.0
  contact:
    email: wolfgangmeyers@gmail.com
servers:
  - url: https://aibrush.ngrok.io
  - url: /
paths:
  /api/images:
    get:
      description: Get a list of saved images
      operationId: listImages
      tags:
        - AIBrush
      parameters:
        - name: cursor
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: direction
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageList"
    # create image
    post:
      description: Create a new image
      operationId: createImage
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateImageInput"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
  /api/images/{id}:
    get:
      description: Get a saved image by id
      operationId: getImage
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"

    # update image
    patch:
      description: Update a saved image
      operationId: updateImage
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateImageInput"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
    delete:
      description: Delete a saved image
      operationId: deleteImage
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
  /api/images/{id}.image.jpg:
    get:
      description: Get the binary image data
      operationId: getImageData
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  # get image mask.jpg
  /api/images/{id}.mask.jpg:
    get:
      description: Get the binary mask data
      operationId: getMaskData
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  /api/images/{id}.thumbnail.jpg:
    get:
      description: Get the binary thumbnail data
      operationId: getThumbnailData
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  # handle image .npy files
  /api/images/{id}.npy:
    get:
      description: Get the binary image data
      operationId: getNpyData
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /api/images/{id}.mp4:
    get:
      description: Get the binary video data
      operationId: getVideoData
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            video/mp4:
              schema:
                type: string
                format: binary
    put:
      description: Update the video data
      operationId: updateVideoData
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          video/mp4:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Success
  /api/process-image:
    put:
      description: Get the next pending image and set its status to processing.
      operationId: processImage
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessImageInput"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
  /api/suggestion-seeds:
    get:
      description: Get a list of suggestion seeds
      operationId: listSuggestionSeeds
      tags:
        - AIBrush
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionSeedList"
    post:
      description: Create a new suggestion seed
      operationId: createSuggestionSeed
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuggestionSeedInput"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionSeed"
  /api/suggestion-seeds/{id}:
    get:
      description: Get a suggestion seed by id
      operationId: getSuggestionSeed
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionSeed"
    patch:
      description: Update a suggestion seed
      operationId: updateSuggestionSeed
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuggestionSeedInput"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionSeed"
    delete:
      description: Delete a suggestion seed
      operationId: deleteSuggestionSeed
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
  /api/suggestions-jobs:
    get:
      description: Get a list of suggestions jobs
      operationId: listSuggestionsJobs
      tags:
        - AIBrush
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionsJobList"
    post:
      description: Create a new suggestions job
      operationId: createSuggestionsJob
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSuggestionsJobInput"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionsJob"
  /api/suggestions-jobs/{id}:
    get:
      description: Get a suggestions job by id
      operationId: getSuggestionsJob
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionsJob"
    patch:
      description: Update a suggestions job
      operationId: updateSuggestionsJob
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSuggestionsJobInput"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionsJob"
    delete:
      description: Delete a suggestions job
      operationId: deleteSuggestionsJob
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
  /api/process-suggestion-job:
    post:
      description: Process a suggestions job
      operationId: processSuggestionsJob
      tags:
        - AIBrush
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionsJob"
  /api/svg-jobs:
    post:
      description: Create a new svg job
      operationId: createSvgJob
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSvgJobInput"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SvgJob"
  /api/svg-jobs/{id}:
    get:
      description: Get a svg job by id
      operationId: getSvgJob
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SvgJob"
    patch:
      description: Update a svg job
      operationId: updateSvgJob
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSvgJobInput"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SvgJob"
    delete:
      description: Delete a svg job
      operationId: deleteSvgJob
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
  /api/svg-jobs/{id}/result.svg:
    get:
      description: Get a svg job by id
      operationId: getSvgJobResult
      tags:
        - AIBrush
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            image/svg+xml:
              schema:
                type: string
  # process svg job
  /api/process-svg-job:
    post:
      description: Process a svg job
      operationId: processSvgJob
      tags:
        - AIBrush
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SvgJob"
  /api/assets-url:
    get:
      description: Get the assets url
      operationId: getAssetsUrl
      tags:
        - AIBrush
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetsUrl"
  # login by email
  /api/auth/login:
    post:
      description: Login by email
      operationId: login
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        "204":
          description: Success
  /api/auth/verify:
    post:
      description: Verify Login code
      operationId: verify
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyLoginInput"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResult"
        "400":
          description: Invalid code
  /api/auth/refresh:
    post:
      description: Refresh Login code
      operationId: refresh
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshLoginInput"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResult"
  /api/auth/service-accounts:
    post:
      description: Create a service account
      operationId: createServiceAccount
      tags:
        - AIBrush
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceAccountInput"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResult"
  # healthcheck
  /api/healthcheck:
    get:
      description: Healthcheck
      operationId: healthcheck
      tags:
        - AIBrush
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Healthcheck"

components:
  schemas:
    CreateImageInput:
      type: object
      properties:
        phrases:
          type: array
          items:
            type: string
        negative_phrases:
          type: array
          items:
            type: string
        label:
          type: string
        iterations:
          type: integer
        parent:
          type: string
        encoded_image:
          type: string
        encoded_mask:
          type: string
        encoded_npy:
          type: string
        enable_video:
          type: boolean
        enable_zoom:
          type: boolean
        zoom_frequency:
          type: integer
        zoom_scale:
          type: number
        zoom_shift_x:
          type: number
        zoom_shift_y:
          type: number
        model:
          type: string
        # glid-3 xl specific options
        glid_3_xl_skip_iterations:
          type: number
        glid_3_xl_clip_guidance:
          type: boolean
        glid_3_xl_clip_guidance_scale:
          type: number
        height:
          type: integer
          enum: [128, 256, 384, 512, 640, 768, 896, 1024]
        width:
          type: integer
          enum: [128, 256, 384, 512, 640, 768, 896, 1024]
        uncrop_offset_x:
          type: integer
        uncrop_offset_y:
          type: integer

    UpdateImageInput:
      type: object
      properties:
        label:
          type: string
        current_iterations:
          type: integer
        status:
          type: string
          enum: [pending, processing, completed, saved]
        encoded_image:
          type: string
        encoded_npy:
          type: string
        score:
          type: number

    Image:
      properties:
        id:
          type: string
        created_at:
          type: integer
        created_by:
          type: string
        updated_at:
          type: integer
        phrases:
          type: array
          items:
            type: string
        negative_phrases:
          type: array
          items:
            type: string
        label:
          type: string
        parent:
          type: string
        iterations:
          type: integer
        current_iterations:
          type: integer
        score:
          type: integer
        status:
          type: string
          enum: [pending, processing, completed, saved, error]
        enable_video:
          type: boolean
        enable_zoom:
          type: boolean
        zoom_frequency:
          type: integer
        zoom_scale:
          type: number
        zoom_shift_x:
          type: number
        zoom_shift_y:
          type: number
        model:
          type: string
        # glid-3 xl specific options
        glid_3_xl_skip_iterations:
          type: number
        glid_3_xl_clip_guidance:
          type: boolean
        glid_3_xl_clip_guidance_scale:
          type: number
        width:
          type: integer
          enum: [128, 256, 384, 512, 640, 768, 896, 1024]
        height:
          type: integer
          enum: [128, 256, 384, 512, 640, 768, 896, 1024]
        uncrop_offset_x:
          type: integer
          enum: [-896, -768, -640, -512, -384, -256, -128, 0, 128, 256, 384, 512, 640, 768, 896]
        uncrop_offset_y:
          type: integer
          enum: [-896, -768, -640, -512, -384, -256, -128, 0, 128, 256, 384, 512, 640, 768, 896]
      required:
        - id
        - created_at
        - created_by
        - updated_at
        - phrases
        - negative_phrases
        - label
        - parent
        - iterations
        - current_iterations
        - score
        - status
        - enable_video
        - model
        - size
    ImageList:
      properties:
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
    ProcessImageInput:
      properties:
        zoom_supported:
          type: boolean
      required:
        - zoom_supported
    LoginInput:
      type: object
      properties:
        email:
          type: string
    VerifyLoginInput:
      type: object
      properties:
        email:
          type: string
        code:
          type: string
    RefreshLoginInput:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refresh_token
    LoginResult:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    SuggestionSeed:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        items:
          type: array
          items:
            type: string
        created_by:
          type: string
      required:
        - id
        - name
        - description
        - items
        - created_by
    SuggestionSeedList:
      properties:
        suggestionSeeds:
          type: array
          items:
            $ref: "#/components/schemas/SuggestionSeed"
      required:
        - suggestionSeeds
    SuggestionSeedInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        items:
          type: array
          items:
            type: string
      required:
        - name
        - items
    SuggestionsJob:
      type: object
      properties:
        id:
          type: string
        created_by:
          type: string
        created_at:
          type: integer
        updated_at:
          type: integer
        seed_id:
          type: string
        status:
          type: string
          enum: [pending, processing, completed, saved]
        result:
          type: array
          items:
            type: string
      required:
        - id
        - created_by
        - created_at
        - updated_at
        - seed_id
        - status
        - result
    SuggestionsJobList:
      properties:
        suggestionsJobs:
          type: array
          items:
            $ref: "#/components/schemas/SuggestionsJob"
    CreateSuggestionsJobInput:
      type: object
      properties:
        seed_id:
          type: string
    UpdateSuggestionsJobInput:
      type: object
      properties:
        status:
          type: string
          enum: [pending, processing, completed, saved]
        result:
          type: array
          items:
            type: string
    SvgJob:
      type: object
      properties:
        id:
          type: string
        created_by:
          type: string
        created_at:
          type: integer
        updated_at:
          type: integer
        image_id:
          type: string
        status:
          type: string
          enum: [pending, processing, completed]
      required:
        - id
        - created_by
        - created_at
        - updated_at
        - image_id
        - status
    CreateSvgJobInput:
      type: object
      properties:
        image_id:
          type: string
    UpdateSvgJobInput:
      type: object
      properties:
        result:
          type: string
    AssetsUrl:
      type: object
      properties:
        assets_url:
          type: string
      required:
        - assets_url
    Healthcheck:
      type: object
      properties:
        status:
          type: string
          enum: [ok]
    CreateServiceAccountInput:
      type: object
      properties:
        type:
          type: string
          enum: [public, private]
    User:
      type: object
      properties:
        id:
          type: string
        active:
          type: boolean

